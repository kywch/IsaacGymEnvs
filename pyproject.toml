[build-system]
requires = ["Cython>=3.0", "pip>=23.0", "setuptools>=61.0", "wheel", "numpy==1.23.3"]

[project]
description = "Pixi-based IssacGymEnvs"
name = "isaacgymenvs"
requires-python = ">=3.8,<3.9"
version = "0.1.0"
dependencies = [
    "gym==0.23.1",
    "pysdf==0.1.9",
    "warp-lang==0.10.1",
    "rl-games>=1.6.1,<2",
]

[system-requirements]
cuda = "12.1"

[tool.setuptools]
packages = ["isaacgymenvs"]

[tool.pixi.project]
channels = ["pytorch", "nvidia", "conda-forge"]
platforms = ["linux-64"]

[tool.pixi.dependencies]
pip = ">=23.0"
cython = ">=3.0.11,<4"
setuptools = ">=75.3.0,<76"
pre-commit = ">=3.5.0,<4"
ruff = ">=0.6.2,<0.7"
wandb = ">=0.16.6,<0.17"

pytorch = "2.3.1"
pytorch-cuda = "12.1"

# isaacgym deps
torchvision = ">=0.18.1,<0.19"
scipy = ">=1.10.1,<2"
imageio = ">=2.36.0,<3"
fsspec = ">=2024.10.0,<2025"
omegaconf = ">=2.3.0,<3"

# issacgymenvs deps
hydra-core = ">=1.3.2,<2"
termcolor = ">=2.4.0,<3"
jinja2 = ">=3.1.4,<4"
pyvirtualdisplay = ">=3.0,<4"
urdfpy = ">=0.0.22,<0.0.23"
trimesh = ">=4.5.3,<5"
ffmpeg = { version = ">=7.0,<8", channel = "conda-forge" }

[tool.pixi.pypi-dependencies]
isaacgymenvs = { path = ".", editable = true }

[tool.pixi.tasks]
test_deps = "python -c 'import isaacgym, isaacgymenvs, torch; print(torch.cuda.is_available())'"

[tool.pixi.activation]
scripts = ["env_setup.sh"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 100
indent-width = 4

# Assume Python 3.11
target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
